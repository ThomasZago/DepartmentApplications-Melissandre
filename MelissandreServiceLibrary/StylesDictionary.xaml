<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:MelissandreServiceLibrary.Converter"
                    xmlns:enum="clr-namespace:MelissandreServiceLibrary.Enum">
    
    <converter:NonEmptyStringToVisibilityConverter x:Key="NonEmptyStringToVisibilityConverter"/>
    <converter:EnumToListConverter x:Key="EnumToListConverter"/>
    <SolidColorBrush x:Key="ChartGrey" Color="#2c3d4d"/>
    <SolidColorBrush x:Key="ChartDarkBlue" Color="#003049"/>
    <SolidColorBrush x:Key="ChartBlue" Color="#669bbc"/>
    <SolidColorBrush x:Key="ChartLightBlue" Color="#87bbc9"/>
    <SolidColorBrush x:Key="ChartYellow" Color="#fdd7aa"/>
    <SolidColorBrush x:Key="ChartOrange" Color="#eeab23"/>
    <SolidColorBrush x:Key="ChartRed" Color="#cc6151"/>
    <SolidColorBrush x:Key="ChartDarkRed" Color="#b5313c"/>

    <Style x:Key="LightTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Sen"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource ChartGrey}"/>
    </Style>
    <Style x:Key="TitleTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Lago"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Foreground" Value="{StaticResource ChartDarkBlue}"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="CustomCheckboxStyle" TargetType="CheckBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="CheckBorder"
                            Grid.Column="0"
                            Height="25"
                            Width="25"
                            Background="Transparent"
                            BorderBrush="{StaticResource ChartGrey}"
                            BorderThickness="3"
                            CornerRadius="4"
                            Margin="0,0,6,0">
                            <Viewbox Width="17" Height="17">
                                <Path x:Name="CheckIcon"
                                  Data="M0,5 L4,10 L11,1"
                                  Stroke="White"
                                  StrokeThickness="2"
                                  Opacity="0" />
                            </Viewbox>
                        </Border>
                        <ContentPresenter Grid.Column="1"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      Margin="0,0,0,0"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontFamily" Value="Lago"/>
                                    <Setter Property="FontWeight" Value="DemiBold"/>
                                    <Setter Property="FontSize" Value="15"/>
                                    <Setter Property="Foreground" Value="{StaticResource ChartGrey}"/>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckIcon" Property="Opacity" Value="1" />
                            <Setter TargetName="CheckBorder" Property="Background" Value="{StaticResource ChartGrey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomIconButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ChartLightBlue}" />
        <Setter Property="Foreground" Value="{StaticResource ChartDarkBlue}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="ButtonBackground"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10" />
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Margin="10" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBackground" Property="Background" Value="{StaticResource ChartBlue}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBackground" Property="Background" Value="{StaticResource ChartDarkBlue}" />
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomLargeButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ChartLightBlue}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="50"/>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="ButtonBackground"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10" />
                        <TextBlock x:Name="ButtonTextBlock"
                               Text="{TemplateBinding Content}"
                               Style="{StaticResource TitleTextStyle}"
                               FontSize="20"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBackground" Property="Background" Value="{StaticResource ChartBlue}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBackground" Property="Background" Value="{StaticResource ChartDarkBlue}" />
                            <Setter TargetName="ButtonTextBlock" Property="Foreground" Value="white" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="ButtonBackground"
                            Background="Transparent"
                            CornerRadius="10" />
                        <TextBlock x:Name="ButtonTextBlock"
                               Text="{TemplateBinding Content}"
                               Style="{StaticResource TitleTextStyle}"
                               FontSize="16"
                               TextDecorations="None"
                               TextAlignment="Center"
                               VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonTextBlock" Property="TextBlock.TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonTextBlock" Property="Foreground" Value="{StaticResource ChartBlue}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource ChartGrey}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Border Background="#F0F5FA"
                            BorderThickness="0"
                            CornerRadius="5"/>
                        <TextBox Background="Transparent"
                             Margin="15,15,15,15"
                             BorderThickness="0"
                             FontFamily="Sen"
                             FontSize="16"
                             Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ErrorMessageStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ChartDarkRed}"/>
        <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, Converter={StaticResource NonEmptyStringToVisibilityConverter}}" />
    </Style>

    <Style x:Key="ComboboxClientAccountStyle" TargetType="ComboBox">
        <Setter Property="ItemsSource" Value="{Binding Source={x:Type enum:ClientAccountType}, Converter={StaticResource EnumToListConverter}}"/>
    </Style>
    <Style x:Key="ComboboxAccountStatusStyle" TargetType="ComboBox">
        <Setter Property="ItemsSource" Value="{Binding Source={x:Type enum:AccountStatus}, Converter={StaticResource EnumToListConverter}}"/>
    </Style>
    <Style x:Key="ComboboxDepartmentAccountStyle" TargetType="ComboBox">
        <Setter Property="ItemsSource" Value="{Binding Source={x:Type enum:DepartmentAccountType}, Converter={StaticResource EnumToListConverter}}"/>
    </Style>
    
</ResourceDictionary>